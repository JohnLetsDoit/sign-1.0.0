<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tsw.sign.user.dao.UserMapper">
    <resultMap id="UserResultMap" type="com.tsw.sign.user.model.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="phone" property="phone"/>
        <result column="department" property="department"/>
        <result column="roleid" property="roleid"/>
        <result column="role" property="role"/>
        <result column="createtime" property="createtime"/>
        <result column="lastlogintime" property="lastlogintime"/>
    </resultMap>

    <!--<sql id="Base_Column_List" >-->
    <!---->
    <!--</sql>-->
    <sql id="tbUserColumns">
          a.id,
          a.username,
          a.password,
          a.phone,
          a.department,
          a.roleid,
          a.role,
          a.createtime,
          a.lastlogintime
    </sql>
    <select id="selectAll" resultMap="UserResultMap">
        SELECT
            id,
            username,
            password,
            phone,
            department,
            roleid,
            role,
            createtime,
            lastlogintime
        FROM
           tb_user
    </select>

    <select id="getByUsername" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT
            id,
            username,
            password,
            phone,
            department,
            roleid,
            role,
            createtime,
            lastlogintime
        FROM
           tb_user AS a
        WHERE
           a.username= #{username}
    </select>

    <insert id="insert">
    INSERT INTO tb_user (
      username,
      password,
      phone,
      role,
      department,
      createtime
    )
    VALUES
      (
        #{username},
        #{password},
        #{phone},
        #{role},
        #{department},
        #{createtime}
      )

   </insert>

    <update id="update">
    UPDATE
      tb_user
    SET
      username = #{username},
      password = #{password},
      phone = #{phone},
      role = #{role},
      department = #{department},
      createtime = #{createtime},
      lastlogintime=#{lastlogintime}
    WHERE id = #{id}
    </update>

    <!--从前台获取值用#{value}；以Map类型作为参数，不知道是什么类型-->
    <select id="page" resultType="com.tsw.sign.user.model.User" parameterType="java.util.Map">
        SELECT
            id,
            username,
            password,
            phone,
            department,
            roleid,
            role,
            createtime,
            lastlogintime
        FROM
            tb_user
        <where>
            <if test="user.username !=null and user.username !=''">
                AND username LIKE  CONCAT('%',#{user.username},'%')
            </if>

            <if test="user.department != null and user.department != ''">
                AND department LIKE CONCAT('%', #{user.department}, '%')
            </if>

            <if test="user.phone != null and user.phone != ''">
                AND phone LIKE CONCAT('%', #{user.phone}, '%')
            </if>

        </where>
        LIMIT #{start},#{length}
    </select>

    <select id="ishaveuser" resultType="java.lang.Integer">

    SELECT COUNT(*) FROM tb_user as a
    WHERE
    a.username=#{username}

    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM tb_user AS a
        <where>
            <if test="username !=null and username !=''">
                AND username like  CONCAT('%',#{username},'%')
            </if>
        </where>
    </select>

    <delete id="delete">
      DELETE FROM tb_user WHERE id = #{id}
    </delete>

    <delete id="deleteMulit">
        DELETE from tb_user
        where id in
        <foreach collection="array" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getById" resultType="com.tsw.sign.user.model.User">
        SELECT
        <include refid="tbUserColumns" />
        FROM
        tb_user AS a
        WHERE
        a.id = #{id}
    </select>

</mapper>